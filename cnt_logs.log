2023-04-10 22:27:57,941:#T[DEB]:[proactor_events.py:633:__init__()] Using proactor: IocpProactor
2023-04-10 22:27:57,943:#T[DEB]:[api.py:133:make_request()] Make request: "getMe" with data: "{}" and files "None"
2023-04-10 22:27:58,203:#T[DEB]:[api.py:95:check_result()] Response for getMe: [200] "'{"ok":true,"result":{"id":5263646133,"is_bot":true,"first_name":"\\u0412\\u0418.\\u0440\\u0443 - \\u041f\\u043e\\u0434\\u0440\\u044f\\u0434\\u0447\\u0438\\u043a\\u0438","username":"Contractor_vibot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
2023-04-10 22:27:58,204:#T[INF]:[executor.py:362:_welcome()] Bot: ВИ.ру - Подрядчики [@Contractor_vibot]
2023-04-10 22:27:58,205:#T[DEB]:[api.py:133:make_request()] Make request: "getWebhookInfo" with data: "{}" and files "None"
2023-04-10 22:27:58,272:#T[DEB]:[api.py:95:check_result()] Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2023-04-10 22:27:58,273:#T[DEB]:[api.py:133:make_request()] Make request: "deleteWebhook" with data: "{'drop_pending_updates': True}" and files "None"
2023-04-10 22:27:58,345:#T[DEB]:[api.py:95:check_result()] Response for deleteWebhook: [200] "'{"ok":true,"result":true,"description":"Webhook is already deleted"}'"
2023-04-10 22:27:58,345:#T[WAR]:[executor.py:358:_skip_updates()] Updates were skipped successfully.
2023-04-10 22:27:58,345:#T[INF]:[bot_main.py:644:on_startup()] Bot has been started.
2023-04-10 22:27:58,345:#T[DEB]:[middlewares.py:41:setup()] Loaded middleware 'LoggingMiddleware'
2023-04-10 22:27:58,345:#T[INF]:[dispatcher.py:358:start_polling()] Start polling.
2023-04-10 22:27:58,345:#T[DEB]:[api.py:133:make_request()] Make request: "getWebhookInfo" with data: "{}" and files "None"
2023-04-10 22:27:58,425:#T[DEB]:[api.py:95:check_result()] Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
2023-04-10 22:27:58,426:#T[DEB]:[api.py:133:make_request()] Make request: "getUpdates" with data: "{'timeout': 120}" and files "None"
2023-04-10 22:28:03,608:#T[DEB]:[api.py:95:check_result()] Response for getUpdates: [409] "'{"ok":false,"error_code":409,"description":"Conflict: terminated by other getUpdates request; make sure that only one bot instance is running"}'"
2023-04-10 22:28:03,609:#T[ERR]:[dispatcher.py:390:start_polling()] Cause exception while getting updates.
Traceback (most recent call last):
  File "C:\Users\Сергей Казаков\PycharmProjects\Contractor_BOT\venv\Lib\site-packages\aiogram\dispatcher\dispatcher.py", line 381, in start_polling
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Сергей Казаков\PycharmProjects\Contractor_BOT\venv\Lib\site-packages\aiogram\bot\bot.py", line 110, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Сергей Казаков\PycharmProjects\Contractor_BOT\venv\Lib\site-packages\aiogram\bot\base.py", line 236, in request
    return await api.make_request(await self.get_session(), self.server, self.__token, method, data, files,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Сергей Казаков\PycharmProjects\Contractor_BOT\venv\Lib\site-packages\aiogram\bot\api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Сергей Казаков\PycharmProjects\Contractor_BOT\venv\Lib\site-packages\aiogram\bot\api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "C:\Users\Сергей Казаков\PycharmProjects\Contractor_BOT\venv\Lib\site-packages\aiogram\utils\exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
2023-04-10 22:28:08,623:#T[DEB]:[api.py:133:make_request()] Make request: "getUpdates" with data: "{'timeout': 120}" and files "None"
2023-04-10 22:28:13,791:#T[DEB]:[api.py:95:check_result()] Response for getUpdates: [409] "'{"ok":false,"error_code":409,"description":"Conflict: terminated by other getUpdates request; make sure that only one bot instance is running"}'"
2023-04-10 22:28:13,791:#T[ERR]:[dispatcher.py:390:start_polling()] Cause exception while getting updates.
Traceback (most recent call last):
  File "C:\Users\Сергей Казаков\PycharmProjects\Contractor_BOT\venv\Lib\site-packages\aiogram\dispatcher\dispatcher.py", line 381, in start_polling
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Сергей Казаков\PycharmProjects\Contractor_BOT\venv\Lib\site-packages\aiogram\bot\bot.py", line 110, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Сергей Казаков\PycharmProjects\Contractor_BOT\venv\Lib\site-packages\aiogram\bot\base.py", line 236, in request
    return await api.make_request(await self.get_session(), self.server, self.__token, method, data, files,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Сергей Казаков\PycharmProjects\Contractor_BOT\venv\Lib\site-packages\aiogram\bot\api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Сергей Казаков\PycharmProjects\Contractor_BOT\venv\Lib\site-packages\aiogram\bot\api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "C:\Users\Сергей Казаков\PycharmProjects\Contractor_BOT\venv\Lib\site-packages\aiogram\utils\exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
2023-04-10 22:28:16,921:#T[INF]:[bot_main.py:649:on_shutdown()] Bot has been stopped.
